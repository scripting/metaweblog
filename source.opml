<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sun, 18 Jun 2023 16:53:04 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes http://drummer.scripting.com. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: metaweblog</title>
		<dateCreated>Fri, 16 Jun 2023 16:40:46 GMT</dateCreated>
		<dateModified>Sun, 18 Jun 2023 16:53:04 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 4, 5, 12, 25, 27, 35, 36, 37, 42, 43, 46, 47, 51, 52, 56, 57, 61, 71, 72, 74, 76</expansionState>
		<vertScrollState>34</vertScrollState>
		<windowTop>154</windowTop>
		<windowLeft>1135</windowLeft>
		<windowBottom>1090</windowBottom>
		<windowRight>2307</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/metaweblog/">
			<outline text="server/worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="#### 6/18/23; 12:13:04 PM by DW" created="Sun, 18 Jun 2023 16:13:02 GMT">
					<outline text="Starting." created="Sun, 18 Jun 2023 16:13:04 GMT"/>
					<outline text="Remote calls are case-insensitive, ie, newPost and newpost are the same thing." created="Sun, 18 Jun 2023 16:13:08 GMT"/>
					</outline>
				</outline>
			<outline text="server/package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;metaweblog&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Metaweblog API server. &quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;main&quot;: &quot;metaweblog.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="server/metaweblog.js">
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text="" created="Sun, 18 Jun 2023 16:03:38 GMT"/>
				<outline text="var config = {" created="Sun, 23 Apr 2023 15:03:29 GMT">
					<outline text="port: process.env.PORT || 1417," created="Fri, 10 Feb 2023 16:12:18 GMT"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="flAllowAccessFromAnywhere: true"/>
					<outline text="};" created="Sun, 23 Apr 2023 15:03:32 GMT"/>
					</outline>
				<outline text="" created="Sun, 18 Jun 2023 16:03:38 GMT"/>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Sun, 23 Apr 2023 15:03:29 GMT"/>
				<outline text="function newPost (username, blogid, struct, publish, callback) {" created="Sun, 18 Jun 2023 16:31:48 GMT">
					<outline text="Changes" isComment="true" created="Sun, 18 Jun 2023 16:43:02 GMT">
						<outline text="6/18/23; 12:43:04 PM by DW" created="Sun, 18 Jun 2023 16:43:04 GMT">
							<outline text="Here's how Radio created a new post. " created="Sun, 18 Jun 2023 16:43:05 GMT">
								<outline text="http://listings.opml.org/verbs/builtins/radio/weblog/metaWeblogApi/rpcHandlers/newPost.html" created="Sun, 18 Jun 2023 16:43:35 GMT"/>
								</outline>
							</outline>
						</outline>
					<outline text="var postid = utils.random (1, 1000);" created="Sun, 18 Jun 2023 16:34:10 GMT"/>
					<outline text="callback (undefined, postid);" created="Sun, 18 Jun 2023 16:33:58 GMT"/>
					<outline text="}" created="Sun, 18 Jun 2023 16:32:16 GMT"/>
					</outline>
				<outline text="function editPost (username, postid, struct, publish, callback) {" created="Sun, 18 Jun 2023 16:31:48 GMT">
					<outline text="Changes" isComment="true" created="Sun, 18 Jun 2023 16:43:02 GMT">
						<outline text="6/18/23; 12:43:04 PM by DW" created="Sun, 18 Jun 2023 16:43:04 GMT">
							<outline text="Here's how Radio eduts a post. " created="Sun, 18 Jun 2023 16:43:05 GMT">
								<outline text="http://listings.opml.org/verbs/builtins/radio/weblog/metaWeblogApi/rpcHandlers/editPost.html"/>
								</outline>
							</outline>
						</outline>
					<outline text="callback (undefined, true);" created="Sun, 18 Jun 2023 16:33:58 GMT"/>
					<outline text="}" created="Sun, 18 Jun 2023 16:32:16 GMT"/>
					</outline>
				<outline text="function getPost (username, postid, callback) {" created="Sun, 18 Jun 2023 16:31:48 GMT">
					<outline text="Changes" isComment="true" created="Sun, 18 Jun 2023 16:43:02 GMT">
						<outline text="6/18/23; 12:43:04 PM by DW" created="Sun, 18 Jun 2023 16:43:04 GMT">
							<outline text="Here's how Radio gets a post. " created="Sun, 18 Jun 2023 16:43:05 GMT">
								<outline text="http://listings.opml.org/verbs/builtins/radio/weblog/metaWeblogApi/rpcHandlers/getPost.html"/>
								</outline>
							</outline>
						</outline>
					<outline text="const thePost = {" created="Sun, 18 Jun 2023 16:48:07 GMT">
						<outline text="title: &quot;This is a test&quot;," created="Sun, 18 Jun 2023 16:48:19 GMT"/>
						<outline text="link: &quot;http://listings.opml.org/verbs/builtins/radio/weblog/metaWeblogApi/rpcHandlers/getPost.html&quot;," created="Sun, 18 Jun 2023 16:48:27 GMT"/>
						<outline text="description: &quot;Nothing interesting to read here.&quot;" created="Sun, 18 Jun 2023 16:49:00 GMT"/>
						<outline text="}" created="Sun, 18 Jun 2023 16:48:13 GMT"/>
						</outline>
					<outline text="callback (undefined, thePost);" created="Sun, 18 Jun 2023 16:33:58 GMT"/>
					<outline text="}" created="Sun, 18 Jun 2023 16:32:16 GMT"/>
					</outline>
				<outline text="" created="Sun, 18 Jun 2023 16:33:53 GMT"/>
				<outline text="readConfig (&quot;config.json&quot;, config, function () {" created="Sun, 23 Apr 2023 13:52:02 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Sun, 23 Apr 2023 13:54:00 GMT"/>
					<outline text="davehttp.start (config, function (theRequest) {">
						<outline text="const params = theRequest.params;"/>
						<outline text="function returnPlainText (theString) {">
							<outline text="if (theString === undefined) {" created="Sat, 17 Dec 2022 15:19:03 GMT">
								<outline text="theString = &quot;&quot;;" created="Sat, 17 Dec 2022 15:19:12 GMT"/>
								<outline text="}" created="Sat, 17 Dec 2022 15:19:19 GMT"/>
								</outline>
							<outline text="console.log (&quot;returnPlainText: theString == &quot; + theString + &quot;, typeof theString == &quot; + typeof theString);" isComment="true" created="Sat, 17 Dec 2022 14:28:03 GMT"/>
							<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, theString);"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnData (jstruct) {">
							<outline text="if (jstruct === undefined) {">
								<outline text="jstruct = {};"/>
								<outline text="}"/>
								</outline>
							<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnError (jstruct) {">
							<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnJsontext (jsontext) { ">
							<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, jsontext.toString ());"/>
							<outline text="}"/>
							</outline>
						<outline text="function httpReturn (err, returnedValue) {">
							<outline text="Changes" isComment="true" created="Wed, 14 Sep 2022 19:47:30 GMT">
								<outline text="9/14/22; 3:47:35 PM by DW" created="Wed, 14 Sep 2022 19:47:34 GMT">
									<outline text="If the returned value is an object, call returnData, but if it's something else, return it as a string. " created="Wed, 14 Sep 2022 19:47:36 GMT"/>
									<outline text="In all cases, the returned type is application/json." created="Wed, 14 Sep 2022 19:48:09 GMT"/>
									<outline text="This allows the river routines to convert the object to jsontext so it can cache that instead of an object." created="Wed, 14 Sep 2022 19:48:38 GMT"/>
									</outline>
								</outline>
							<outline text="if (err) {">
								<outline text="returnError (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (typeof returnedValue == &quot;object&quot;) {" created="Wed, 14 Sep 2022 19:49:36 GMT">
									<outline text="returnData (returnedValue);"/>
									<outline text="}" created="Wed, 14 Sep 2022 19:49:54 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 14 Sep 2022 19:50:07 GMT">
									<outline text="returnJsontext (returnedValue); //9/14/22 by DW" created="Wed, 14 Sep 2022 19:52:50 GMT"/>
									<outline text="}" created="Wed, 14 Sep 2022 19:50:09 GMT"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="" created="Sun, 18 Jun 2023 16:30:06 GMT"/>
						<outline text="function callWithUsername (callback) {" created="Sun, 18 Jun 2023 16:30:06 GMT">
							<outline text="Changes" isComment="true" created="Sun, 18 Jun 2023 16:30:21 GMT">
								<outline text="6/18/23; 12:30:23 PM by DW" created="Sun, 18 Jun 2023 16:30:22 GMT">
									<outline text="To start, all usernames and passwords are valid. ;-)" created="Sun, 18 Jun 2023 16:30:23 GMT"/>
									</outline>
								</outline>
							<outline text="callback (1); " created="Sun, 18 Jun 2023 16:30:43 GMT"/>
							<outline text="}" created="Sun, 18 Jun 2023 16:30:13 GMT"/>
							</outline>
						<outline text="" created="Sun, 18 Jun 2023 16:30:06 GMT"/>
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/now&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
								<outline text="returnPlainText (new Date ().toString ());" created="Fri, 04 Nov 2022 14:42:33 GMT"/>
								<outline text="return (true);"/>
								</outline>
							<outline text="case &quot;/newpost&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
								<outline text="callWithUsername (function (username) {">
									<outline text="newPost (username, params.blogid, params.struct, params.publish, httpReturn);" created="Sun, 18 Jun 2023 16:13:55 GMT"/>
									<outline text="});"/>
									</outline>
								<outline text="return (true);"/>
								</outline>
							<outline text="case &quot;/editpost&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
								<outline text="callWithUsername (function (username) {">
									<outline text="editPost (username, params.postid, params.struct, params.publish, httpReturn);" created="Sun, 18 Jun 2023 16:13:55 GMT"/>
									<outline text="});"/>
									</outline>
								<outline text="return (true);"/>
								</outline>
							<outline text="case &quot;/getpost&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
								<outline text="callWithUsername (function (username) {">
									<outline text="getPost (username, params.postid, httpReturn);" created="Sun, 18 Jun 2023 16:13:55 GMT"/>
									<outline text="});"/>
									</outline>
								<outline text="return (true);"/>
								</outline>
							<outline text="default: " created="Mon, 20 Feb 2023 14:17:31 GMT">
								<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
								<outline text="return (true);"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="});" created="Sun, 23 Apr 2023 13:52:14 GMT"/>
					</outline>
				<outline text=""/>
				</outline>
			<outline text="frontier/metaweblog.js" isComment="true" created="Sun, 18 Jun 2023 14:22:53 GMT">
				<outline text="on editPost (title=&quot;&quot;, link=&quot;&quot;, description=&quot;&quot;, adrstruct=nil, postId=0, username=nil, password=nil, blogId=nil, flPublish=true, adrdata=@metaWeblog.data)">
					<outline text="Changes" isComment="true">
						<outline text="6/9/02; 12:01:28 PM by DW">
							<outline text="Created."/>
							</outline>
						</outline>
					<outline text="local (url, struct)"/>
					<outline text="metaWeblog.init ()"/>
					<outline text="bundle //set defaults">
						<outline text="if username == nil">
							<outline text="username = user.metaWeblog.username"/>
							</outline>
						<outline text="if password == nil">
							<outline text="password = string (user.metaWeblog.password)"/>
							</outline>
						<outline text="if blogId == nil">
							<outline text="blogId = user.metaWeblog.blogId"/>
							</outline>
						</outline>
					<outline text="url = &quot;xmlrpc://&quot; + adrdata^.server + &quot;:&quot; + adrdata^.port + adrdata^.rpcPath"/>
					<outline text="if adrstruct == nil">
						<outline text="adrstruct = @struct"/>
						<outline text="new (tabletype, adrstruct)"/>
						</outline>
					<outline text="if title != &quot;&quot;">
						<outline text="adrstruct^.title = title"/>
						</outline>
					<outline text="if link != &quot;&quot;">
						<outline text="adrstruct^.link = link"/>
						</outline>
					<outline text="adrstruct^.description = description //description must be present, according to the Radio implementation"/>
					<outline text="return ([url].metaWeblog.editPost (postId, username, password, adrstruct^, flPublish))"/>
					</outline>
				<outline text="on getCategories (blogid=nil, username=nil, password=nil, adrdata=@metaWeblog.data)">
					<outline text="Changes" isComment="true" created="Sun, 04 Dec 2005 04:32:18 GMT">
						<outline text="12/3/05; 8:32:23 PM by DW" created="Sun, 04 Dec 2005 04:32:21 GMT">
							<outline text="Created. This is specified by the RFC, but until now we didn't have a glue script for it. " created="Sun, 04 Dec 2005 04:32:23 GMT"/>
							<outline text="http://www.xmlrpc.com/metaWeblogApi" created="Sun, 04 Dec 2005 04:33:10 GMT"/>
							</outline>
						</outline>
					<outline text="local (url)"/>
					<outline text="metaWeblog.init ()"/>
					<outline text="bundle //set defaults">
						<outline text="if username == nil">
							<outline text="username = user.metaWeblog.username"/>
							</outline>
						<outline text="if password == nil">
							<outline text="password = string (user.metaWeblog.password)"/>
							</outline>
						<outline text="if blogId == nil">
							<outline text="blogId = user.metaWeblog.blogId"/>
							</outline>
						</outline>
					<outline text="url = &quot;xmlrpc://&quot; + adrdata^.server + &quot;:&quot; + adrdata^.port + adrdata^.rpcPath"/>
					<outline text="return ([url].metaWeblog.getCategories (blogid, username, password))"/>
					</outline>
				<outline text="on getPost (postId=0, username=nil, password=nil, blogId=nil, adrstruct=nil, adrdata=@metaWeblog.data)">
					<outline text="if adrstruct != nil">
						<outline text="local (url)"/>
						<outline text="metaWeblog.init ()"/>
						<outline text="bundle //set defaults">
							<outline text="if username == nil">
								<outline text="username = user.metaWeblog.username"/>
								</outline>
							<outline text="if password == nil">
								<outline text="password = string (user.metaWeblog.password)"/>
								</outline>
							<outline text="if blogId == nil">
								<outline text="blogId = user.metaWeblog.blogId"/>
								</outline>
							</outline>
						<outline text="url = &quot;xmlrpc://&quot; + adrdata^.server + &quot;:&quot; + adrdata^.port + adrdata^.rpcPath"/>
						<outline text="adrstruct^ = [url].metaWeblog.getPost (postid, username, password)"/>
						</outline>
					</outline>
				<outline text="on getRecentPosts (blogid, username, password, numberOfPosts, adrdata=@metaWeblog.data)">
					<outline text="Changes" isComment="true" created="Thu, 24 Aug 2006 21:47:45 GMT">
						<outline text="8/24/06; 2:47:48 PM by DW" created="Thu, 24 Aug 2006 21:47:47 GMT">
							<outline text="Created." created="Thu, 24 Aug 2006 21:47:49 GMT"/>
							</outline>
						</outline>
					<outline text="local (url)"/>
					<outline text="metaWeblog.init ()"/>
					<outline text="bundle //set defaults">
						<outline text="if username == nil">
							<outline text="username = user.metaWeblog.username"/>
							</outline>
						<outline text="if password == nil">
							<outline text="password = string (user.metaWeblog.password)"/>
							</outline>
						<outline text="if blogId == nil">
							<outline text="blogId = user.metaWeblog.blogId"/>
							</outline>
						</outline>
					<outline text="url = &quot;xmlrpc://&quot; + adrdata^.server + &quot;:&quot; + adrdata^.port + adrdata^.rpcPath"/>
					<outline text="return ([url].metaWeblog.getRecentPosts (blogid, username, password, numberOfPosts))"/>
					</outline>
				<outline text="on getRsdData (weblogurl, adrtable)">
					<outline text="Changes" isComment="true" created="Fri, 20 Jan 2006 16:33:10 GMT">
						<outline text="8/29/06; 10:52:26 AM by DW" created="Tue, 29 Aug 2006 17:52:26 GMT">
							<outline text="Manila sometimes includes its &lt;link&gt; element without a closing /&gt;. Rather than force the user to update, or hack up the Manila source, we go ahead and put the slash in there for them. An example:" created="Tue, 29 Aug 2006 17:52:27 GMT">
								<outline text="&lt;link rel=&quot;EditURI&quot; type=&quot;application/rsd+xml&quot; title=&quot;RSD&quot; href=&quot;http://fmcpherson.weblogger.com/xml/rsd.xml&quot; &gt;" created="Tue, 29 Aug 2006 17:54:33 GMT"/>
								</outline>
							</outline>
						<outline text="8/26/06; 11:50:38 AM by DW" created="Sat, 26 Aug 2006 18:50:36 GMT">
							<outline text="Allow for redirection on the HTTP read." created="Sat, 26 Aug 2006 18:50:38 GMT"/>
							</outline>
						<outline text="1/20/06; 8:33:14 AM by DW" created="Fri, 20 Jan 2006 16:33:12 GMT">
							<outline text="Created." created="Fri, 20 Jan 2006 16:33:16 GMT"/>
							<outline text="Given the address of a weblog, read its source, find the RSD file, see if it supports the MetaWeblog API, and if so, fill teh table with its url and blogID, and return true." created="Fri, 20 Jan 2006 16:33:20 GMT"/>
							</outline>
						</outline>
					<outline text="local (pat = &quot;&lt;link rel=\&quot;EditURI\&quot;&quot;)" created="Fri, 20 Jan 2006 16:35:20 GMT"/>
					<outline text="local (s = tcp.httpreadurl (weblogurl, ctFollowRedirects:5))" created="Fri, 20 Jan 2006 16:35:37 GMT"/>
					<outline text="local (ix = string.patternmatch (pat, s))" created="Fri, 20 Jan 2006 16:35:54 GMT"/>
					<outline text="if ix == 0" created="Fri, 20 Jan 2006 16:36:12 GMT">
						<outline text="return (false)" created="Fri, 20 Jan 2006 16:36:15 GMT"/>
						</outline>
					<outline text="s = string.delete (s, 1, ix-1)" created="Fri, 20 Jan 2006 16:36:25 GMT"/>
					<outline text="local (i, xstruct)" created="Fri, 20 Jan 2006 16:39:58 GMT"/>
					<outline text="for i = 1 to sizeof (s)" created="Fri, 20 Jan 2006 16:37:51 GMT">
						<outline text="if s [i] == '&gt;'" created="Fri, 20 Jan 2006 16:38:32 GMT">
							<outline text="s = string.mid (s, 1, i)" created="Fri, 20 Jan 2006 16:38:42 GMT"/>
							<outline text="break" created="Fri, 20 Jan 2006 16:39:15 GMT"/>
							</outline>
						</outline>
					<outline text="if not (s endswith &quot;/&gt;&quot;) //8/29/06 by DW" created="Tue, 29 Aug 2006 17:49:13 GMT">
						<outline text="s = string.insert (&quot;/&quot;, s, sizeof (s))" created="Tue, 29 Aug 2006 17:49:24 GMT"/>
						</outline>
					<outline text="xml.compile (s, @xstruct)" created="Fri, 20 Jan 2006 16:39:36 GMT"/>
					<outline text="scratchpad.xstruct = xstruct; scratchpad.s = s" isComment="true" created="Fri, 20 Jan 2006 16:39:44 GMT"/>
					<outline text="" created="Fri, 20 Jan 2006 16:36:48 GMT"/>
					<outline text="local (adrlink = xml.getaddress (@xstruct, &quot;link&quot;))" created="Fri, 20 Jan 2006 16:41:06 GMT"/>
					<outline text="local (rsdurl = adrlink^.[&quot;/atts&quot;].href)" created="Fri, 20 Jan 2006 16:41:45 GMT"/>
					<outline text="local (xmltext = tcp.httpreadurl (rsdurl))" created="Fri, 20 Jan 2006 16:42:12 GMT"/>
					<outline text="xml.compile (xmltext, @xstruct)" created="Fri, 20 Jan 2006 16:42:29 GMT"/>
					<outline text="scratchpad.xstruct = xstruct" isComment="true" created="Fri, 20 Jan 2006 16:42:36 GMT"/>
					<outline text="" created="Fri, 20 Jan 2006 16:55:32 GMT"/>
					<outline text="local (adrrsd = xml.getaddress (@xstruct, &quot;rsd&quot;))" created="Fri, 20 Jan 2006 16:55:32 GMT"/>
					<outline text="local (adrservice = xml.getaddress (adrrsd, &quot;service&quot;))" created="Fri, 20 Jan 2006 16:55:49 GMT"/>
					<outline text="local (adrapis = xml.getaddress (adrservice, &quot;apis&quot;), adr)" created="Fri, 20 Jan 2006 16:55:49 GMT"/>
					<outline text="for adr in adrapis" created="Fri, 20 Jan 2006 16:56:24 GMT">
						<outline text="if nameof (adr^) contains &quot;api&quot;" created="Fri, 20 Jan 2006 16:56:28 GMT">
							<outline text="if adr^.[&quot;/atts&quot;].name == &quot;MetaWeblog&quot;" created="Fri, 20 Jan 2006 16:56:38 GMT">
								<outline text="new (tabletype, adrtable)" created="Fri, 20 Jan 2006 16:57:23 GMT"/>
								<outline text="adrtable^.url = adr^.[&quot;/atts&quot;].apiLink" created="Fri, 20 Jan 2006 16:57:37 GMT"/>
								<outline text="adrtable^.blogID = adr^.[&quot;/atts&quot;].blogID" created="Fri, 20 Jan 2006 16:57:37 GMT"/>
								<outline text="return (true)" created="Fri, 20 Jan 2006 16:58:53 GMT"/>
								</outline>
							</outline>
						</outline>
					<outline text="return (false) //doesn't support the MetaWeblog API" created="Fri, 20 Jan 2006 16:59:06 GMT"/>
					</outline>
				<outline text="on init ()">
					<outline text="if not defined (user.metaWeblog)">
						<outline text="new (tabletype, @user.metaWeblog)"/>
						</outline>
					<outline text="if not defined (user.metaWeblog.username)">
						<outline text="user.metaWeblog.username = &quot;&quot;"/>
						</outline>
					<outline text="if not defined (user.metaWeblog.password)">
						<outline text="user.metaWeblog.password = &quot;&quot;"/>
						</outline>
					<outline text="if not defined (user.metaWeblog.blogid)">
						<outline text="user.metaWeblog.blogid = 0"/>
						</outline>
					</outline>
				<outline text="on newMediaObject (name, type, bits, username=nil, password=nil, blogId=nil, adrdata=@metaweblog.data)">
					<outline text="Changes" isComment="true">
						<outline text="1/31/08; 2:27:55 PM by DW" created="Wed, 23 Nov 2005 23:39:01 GMT">
							<outline text="Created. New glue for MetaWeblog API call, tested with wordpress.com." created="Wed, 23 Nov 2005 23:39:02 GMT"/>
							</outline>
						</outline>
					<outline text="local (url, struct)"/>
					<outline text="metaWeblog.init ()"/>
					<outline text="bundle //set defaults">
						<outline text="if username == nil">
							<outline text="username = user.metaWeblog.username"/>
							</outline>
						<outline text="if password == nil">
							<outline text="password = string (user.metaWeblog.password)"/>
							</outline>
						<outline text="if blogId == nil">
							<outline text="blogId = user.metaWeblog.blogId"/>
							</outline>
						</outline>
					<outline text="bundle //set up struct" created="Thu, 31 Jan 2008 22:29:52 GMT">
						<outline text="new (tabletype, @struct)" created="Thu, 31 Jan 2008 22:29:56 GMT"/>
						<outline text="struct.name = name" created="Thu, 31 Jan 2008 22:30:03 GMT"/>
						<outline text="struct.type = type" created="Thu, 31 Jan 2008 22:30:08 GMT"/>
						<outline text="struct.bits = bits" created="Thu, 31 Jan 2008 22:30:13 GMT"/>
						</outline>
					<outline text="url = &quot;xmlrpc://&quot; + adrdata^.server + &quot;:&quot; + adrdata^.port + adrdata^.rpcPath"/>
					<outline text="return ([url].metaWeblog.newMediaObject (string (blogid), username, password, struct))"/>
					</outline>
				<outline text="on newPost (title=&quot;&quot;, link=&quot;&quot;, description=&quot;&quot;, adrstruct=nil, username=nil, password=nil, blogId=nil, flPublish=true, adrdata=@metaweblog.data)">
					<outline text="Changes" isComment="true">
						<outline text="11/23/05; 3:39:02 PM by DW" created="Wed, 23 Nov 2005 23:39:01 GMT">
							<outline text="blogId must be a string." created="Wed, 23 Nov 2005 23:39:02 GMT"/>
							</outline>
						<outline text="6/9/02; 11:34:06 AM by DW">
							<outline text="Created. See the server-side at radio.weblog.metaweblogapi."/>
							</outline>
						</outline>
					<outline text="local (url, struct)"/>
					<outline text="metaWeblog.init ()"/>
					<outline text="bundle //set defaults">
						<outline text="if username == nil">
							<outline text="username = user.metaWeblog.username"/>
							</outline>
						<outline text="if password == nil">
							<outline text="password = string (user.metaWeblog.password)"/>
							</outline>
						<outline text="if blogId == nil">
							<outline text="blogId = user.metaWeblog.blogId"/>
							</outline>
						</outline>
					<outline text="url = &quot;xmlrpc://&quot; + adrdata^.server + &quot;:&quot; + adrdata^.port + adrdata^.rpcPath"/>
					<outline text="if adrstruct == nil">
						<outline text="adrstruct = @struct"/>
						<outline text="new (tabletype, adrstruct)"/>
						</outline>
					<outline text="if title != &quot;&quot;">
						<outline text="adrstruct^.title = title"/>
						</outline>
					<outline text="if link != &quot;&quot;">
						<outline text="adrstruct^.link = link"/>
						</outline>
					<outline text="adrstruct^.description = description //description must be present, according to the Radio implementation"/>
					<outline text="return ([url].metaWeblog.newPost (string (blogid), username, password, adrstruct^, flPublish))"/>
					</outline>
				<outline text="" created="Sun, 18 Jun 2023 14:49:09 GMT"/>
				<outline text="on testEditPost ()" created="Sun, 18 Jun 2023 14:26:35 GMT">
					<outline text="local (struct)"/>
					<outline text="new (tabletype, @struct)"/>
					<outline text="struct.categories = {&quot;Michegas&quot;, &quot;Mind Bombs&quot;}"/>
					<outline text="dialog.alert (editPost (postId: 1330, description:&quot;I am working on Frontier/Radio glue for the MetaWeblog API. At first I thought it wasn't needed, but then I got to a place where I wanted the distinction betweeen using the Blogger API and the MetaWeblog API to be minimal, so it was time to build a parallel way of calling the MWA. That's what these glue scripts are for.&quot;, link:&quot;http://www.xmlrpc.com/metaWeblogApi&quot;, adrstruct:@struct))"/>
					</outline>
				<outline text="function testGetPost ()">
					<outline text="getpost (postid:1330, adrstruct:@scratchpad.struct)"/>
					</outline>
				<outline text="on testGetCategories ()" created="Sun, 04 Dec 2005 04:38:03 GMT">
					<outline text="local (adrblog = @user.wordpress.blogs.default, data)" created="Wed, 23 Nov 2005 17:01:46 GMT"/>
					<outline text="local (username = adrblog^.username, password = string (adrblog^.password))" created="Wed, 23 Nov 2005 17:02:20 GMT"/>
					<outline text="local (blogid = 1)" created="Sun, 04 Dec 2005 04:40:03 GMT"/>
					<outline text="new (tabletype, @data)" created="Sun, 04 Dec 2005 04:41:40 GMT"/>
					<outline text="bundle //set up data" created="Wed, 23 Nov 2005 17:04:11 GMT">
						<outline text="local (urllist = string.urlsplit (adrblog^.url))" created="Wed, 23 Nov 2005 17:05:33 GMT"/>
						<outline text="new (tabletype, @data)" created="Wed, 23 Nov 2005 17:10:01 GMT"/>
						<outline text="data.protocol = &quot;xml-rpc&quot;" created="Wed, 23 Nov 2005 17:03:27 GMT"/>
						<outline text="data.port = 80" created="Wed, 23 Nov 2005 17:03:21 GMT"/>
						<outline text="data.rpcPath = &quot;/&quot; + urllist [3] " created="Wed, 23 Nov 2005 17:03:39 GMT"/>
						<outline text="data.server = urllist [2]" created="Wed, 23 Nov 2005 17:06:04 GMT"/>
						</outline>
					<outline text="local (thelist = getCategories (blogid, username, password, @data), cats, item)" created="Sun, 04 Dec 2005 04:38:09 GMT"/>
					<outline text="new (tabletype, @cats)" created="Mon, 05 Dec 2005 12:42:52 GMT"/>
					<outline text="for item in thelist" created="Mon, 05 Dec 2005 12:41:58 GMT">
						<outline text="cats.[string.padwithzeros (sizeof (cats)+1, 3)] = item" created="Mon, 05 Dec 2005 12:42:01 GMT"/>
						</outline>
					<outline text="scratchpad.categories = cats" created="Mon, 05 Dec 2005 12:40:24 GMT"/>
					</outline>
				<outline text="on testGetRsdData ()" created="Fri, 20 Jan 2006 16:33:53 GMT">
					<outline text="getRsdData (&quot;http://scripting.wordpress.com/&quot;, @scratchpad.rsdData)" created="Fri, 20 Jan 2006 16:34:02 GMT"/>
					</outline>
				<outline text="on testNewMediaObject ()">
					<outline text="local (bits = file.readwholefile (&quot;Macintosh HD:tmp.jpg&quot;))" created="Thu, 31 Jan 2008 22:32:48 GMT"/>
					<outline text="scratchpad.mediaresult = metaweblog.newmediaobject (&quot;tmp.jpg&quot;, &quot;image/jpeg&quot;, bits, user.wordPress.blogs.default.username, user.wordPress.blogs.default.password, 1)" created="Thu, 31 Jan 2008 22:31:18 GMT"/>
					</outline>
				<outline text="on testNewPost ()">
					<outline text="local (struct)"/>
					<outline text="new (tabletype, @struct)"/>
					<outline text="struct.categories = {&quot;Michegas&quot;, &quot;Mind Bombs&quot;}"/>
					<outline text="dialog.alert (newPost (description:&quot;Now is the time for all good men to come to the aid of their country.&quot;, link:&quot;http://www.scripting.com/&quot;, title:&quot;Test Post for Metaweblog API glue&quot;, adrstruct:@struct))"/>
					</outline>
				</outline>
			<outline text="frontier/wordpress.js" isComment="true" created="Sun, 18 Jun 2023 14:29:56 GMT">
				<outline text="on getEnclosureHtml (enclosureUrl, pubDate=clock.now ())">
					<outline text="local (t, length)"/>
					<outline text="new (tabletype, @t)"/>
					<outline text="t.enclosureUrl = enclosureUrl"/>
					<outline text="t.enclosureFname = string.lastField (enclosureUrl, &quot;/&quot;)"/>
					<outline text="tcp.httpGetTypeLength (enclosureUrl, @t.enclosureType, @length)"/>
					<outline text="t.enclosureMegabytes = string.megabytestring (length)"/>
					<outline text="t.pubDateString = date.longstring (pubDate)"/>
					<outline text="return (string.multiplereplaceall (string (wordPress.data.enclosureTemplate), @t, false, &quot;&lt;%&quot;, &quot;%&gt;&quot;))"/>
					</outline>
				<outline text="on getPost (siteUrl, username, password, postid, adrstruct)">
					<outline text="Changes" isComment="true">
						<outline text="10/28/09; 12:04:50 PM by DW">
							<outline text="Created. "/>
							</outline>
						</outline>
					<outline text="local (adrdata = wordPress.init (), rpcdata)"/>
					<outline text="local (adrsite = wordPress.getSiteData (siteurl))"/>
					<outline text="wordPress.getRpcData (siteurl, @rpcdata)"/>
					<outline text="metaweblog.getpost (postId, username, password, adrsite^.blogId, adrstruct, @rpcdata)"/>
					</outline>
				<outline text="on getRpcData (siteurl, adrrpcdata)">
					<outline text="local (adrsite = wordPress.getSiteData (siteurl))"/>
					<outline text="local (ul = string.urlsplit (adrsite^.url))"/>
					<outline text="new (tabletype, adrrpcdata)"/>
					<outline text="adrrpcdata^.server = ul [2]"/>
					<outline text="adrrpcdata^.port = 80"/>
					<outline text="adrrpcdata^.rpcPath = &quot;/&quot; + ul [3]"/>
					</outline>
				<outline text="on getSiteData (siteUrl)">
					<outline text="Changes" isComment="true">
						<outline text="10/28/09; 9:11:35 AM by DW">
							<outline text="Created. "/>
							</outline>
						</outline>
					<outline text="local (adrdata = wordPress.init (), adrsite = @adrdata^.sites.[siteUrl], now = clock.now ())"/>
					<outline text="if not defined (adrsite^)">
						<outline text="if not metaweblog.getRsdData (siteUrl, adrsite)">
							<outline text="scriptError (&quot;Can't get site data because &quot; + siteUrl + &quot; isn't a WordPress site.&quot;)"/>
							</outline>
						<outline text="new (tabletype, @adrsite^.stats)"/>
						<outline text="adrsite^.stats.ctAccesses = 0"/>
						<outline text="adrsite^.stats.whenFirstAccess = now"/>
						</outline>
					<outline text="adrsite^.stats.ctAccesses++"/>
					<outline text="adrsite^.stats.whenLastAccess = now"/>
					<outline text="return (adrsite)"/>
					</outline>
				<outline text="on init ()">
					<outline text="Changes" isComment="true">
						<outline text="10/28/09; 9:01:39 AM by DW">
							<outline text="Created. "/>
							</outline>
						</outline>
					<outline text="local (adrdata = @config.wordPress)"/>
					<outline text="if not defined (adrdata^)">
						<outline text="new (tabletype, adrdata)"/>
						</outline>
					<outline text="bundle //prefs">
						<outline text="if not defined (adrdata^.prefs)">
							<outline text="new (tabletype, @adrdata^.prefs)"/>
							</outline>
						</outline>
					<outline text="bundle //stats">
						<outline text="if not defined (adrdata^.stats)">
							<outline text="new (tabletype, @adrdata^.stats)"/>
							</outline>
						</outline>
					<outline text="if not defined (adrdata^.sites)">
						<outline text="new (tabletype, @adrdata^.sites)"/>
						</outline>
					<outline text="bundle //temp table">
						<outline text="if not defined (system.temp.wordPress)">
							<outline text="new (tabletype, @system.temp.wordPress)"/>
							</outline>
						</outline>
					<outline text="return (adrdata)"/>
					</outline>
				<outline text="on newMediaObject (siteUrl, username, password, name, type, bits)">
					<outline text="Changes" isComment="true">
						<outline text="11/11/09; 11:33:55 AM by DW">
							<outline text="Created. "/>
							</outline>
						</outline>
					<outline text="local (adrdata = wordPress.init (), objectdata)"/>
					<outline text="local (adrsite = wordPress.getSiteData (siteurl), struct, rpcdata)"/>
					<outline text="wordPress.getRpcData (siteurl, @rpcdata)"/>
					<outline text="objectdata = metaWeblog.newMediaObject (name, type, bits, username, password, adrsite^.blogid, adrdata:@rpcdata)"/>
					<outline text="return (objectdata.url)"/>
					</outline>
				<outline text="on savePost (siteUrl, username, password, title=nil, bodytext=nil, postId = nil, pubDate=nil, enclosureUrl=nil)">
					<outline text="Changes" isComment="true">
						<outline text="10/28/09; 12:28:27 PM by DW">
							<outline text="Created. "/>
							</outline>
						</outline>
					<outline text="local (adrdata = wordPress.init ())"/>
					<outline text="local (adrsite = wordPress.getSiteData (siteurl), struct, rpcdata)"/>
					<outline text="wordPress.getRpcData (siteurl, @rpcdata)"/>
					<outline text="bundle //fill struct">
						<outline text="new (tabletype, @struct)"/>
						<outline text="if pubDate != nil">
							<outline text="struct.dateCreated = pubDate"/>
							</outline>
						<outline text="if enclosureUrl != nil">
							<outline text="new (tabletype, @struct.enclosure)"/>
							<outline text="struct.enclosure.url = enclosureUrl"/>
							<outline text="tcp.httpGetTypeLength (enclosureUrl, @struct.enclosure.type, @struct.enclosure.length, 5)"/>
							</outline>
						</outline>
					<outline text="bundle //set defaults">
						<outline text="if title == nil">
							<outline text="title = &quot;&quot;"/>
							</outline>
						<outline text="if bodytext == nil">
							<outline text="bodytext = &quot;&quot;"/>
							</outline>
						</outline>
					<outline text="if postid == nil">
						<outline text="postid = metaweblog.newPost (title, &quot;&quot;, bodytext, @struct, username, password, adrsite^.blogid, adrdata:@rpcdata) "/>
						</outline>
					<outline text="else">
						<outline text="metaweblog.editpost (title, &quot;&quot;, bodytext, @struct, postid, username, password, adrsite^.blogid, adrdata:@rpcdata)" created="Wed, 23 Nov 2005 16:59:46 GMT"/>
						</outline>
					<outline text="return (postid)"/>
					</outline>
				<outline text="" created="Sun, 18 Jun 2023 14:50:17 GMT"/>
				<outline text="on testGetEnclosureHtml ()">
					<outline text="clipboard.putvalue (getEnclosureHtml (&quot;http://mp3.morningcoffeenotes.com/reboot09Sep08.mp3&quot;))"/>
					</outline>
				<outline text="on testGetPost () //test code">
					<outline text="getpost (&quot;http://rebootnews.wordpress.com/&quot;, user.wordpress.prefs.username, user.wordpress.prefs.password, 9, @scratchpad.wpstruct)"/>
					</outline>
				<outline text="on testGetRpcData ()">
					<outline text="getrpcdata (&quot;http://rebootnews.wordpress.com/&quot;, @scratchpad.rpcdata)"/>
					</outline>
				<outline text="on testInit ()">
					<outline text="init ()"/>
					</outline>
				<outline text="on testNewMediaObject ()">
					<outline text="local (f = &quot;ohio:pictures:DSCN2944.JPG&quot;, fname = file.filefrompath (f))"/>
					<outline text="local (bits = file.readwholefile (f), type = &quot;image/jpeg&quot;)"/>
					<outline text="webbrowser.openurl (newMediaObject (&quot;http://unberkeley.com/&quot;, user.wordpress.prefs.username, user.wordpress.prefs.password, fname, type, bits))"/>
					</outline>
				<outline text="on testSavePost ()">
					<outline text="local (adrtable = @config.myTwitterProfile.calendar.[&quot;2009&quot;].[&quot;10&quot;].[&quot;28&quot;].[&quot;00041&quot;])"/>
					<outline text="local (title = adrtable^.title, pubdate = adrtable^.pubdate)"/>
					<outline text="local (bodytext = string (adrtable^.description), postid = nil)"/>
					<outline text="if defined (adrtable^.postid)">
						<outline text="postid = adrtable^.postid"/>
						</outline>
					<outline text="adrtable^.postid = savePost (&quot;http://rebootnews.wordpress.com/&quot;, user.wordpress.prefs.username, user.wordpress.prefs.password, title, bodytext, postid, pubdate, enclosureUrl:&quot;http://mp3.morningcoffeenotes.com/reboot09Oct26.mp3&quot;)"/>
					</outline>
				<outline text="on testGetSiteData ()">
					<outline text="edit (getSiteData (&quot;http://rebootnews.wordpress.com/&quot;))"/>
					</outline>
				</outline>
			<outline text="frontier/readme.md" isComment="true" created="Sun, 18 Jun 2023 14:33:11 GMT">
				<outline text="# Frontier glue for metawelob API" created="Sun, 18 Jun 2023 14:33:15 GMT">
					<outline text="this code is from opml.root and was used to form the interface to WordPress from Frontier apps." created="Sun, 18 Jun 2023 14:25:00 GMT">
						<outline text="system.verbs.apps.metaweblog -- client code"/>
						<outline text="system.verbs.apps.wordpress -- client code"/>
						</outline>
					<outline text="For easy reading, I am posting it to the repo as if it were JavaScript code." created="Sun, 18 Jun 2023 14:25:22 GMT"/>
					<outline text="Lets see how that works! ;-)" created="Sun, 18 Jun 2023 14:25:44 GMT"/>
					<outline text="PS: I have found example server code from Manila and Radio but don't have in a form I can easily upload here. " created="Sun, 18 Jun 2023 16:01:00 GMT"/>
					<outline text="6/18/23 by DW" isComment="true" created="Sun, 18 Jun 2023 14:24:55 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Sun, 18 Jun 2023 16:20:28 GMT">
				<outline text="# metaweblog">
					<outline text="Client and server implementation of the Metaweblog API in JavaScript."/>
					</outline>
				<outline text="### Useful pointers" created="Sun, 18 Jun 2023 16:21:25 GMT">
					<outline text="* http://xmlrpc.com/metaweblog -- the original spec" created="Sun, 18 Jun 2023 16:20:28 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Thu, 27 Apr 2023 13:58:20 GMT">
			<outline text="nodeEditorSuite.utilities.buildMetaweblog ()" created="Thu, 27 Apr 2023 13:58:24 GMT"/>
			</outline>
		</body>
	</opml>
